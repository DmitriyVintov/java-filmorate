drop table if exists films cascade;
drop table if exists users cascade;
drop table if exists mpa_ratings cascade;
drop table if exists genres cascade;
drop table if exists films_genres cascade;
drop table if exists friends cascade;
drop table if exists likes cascade;


CREATE TABLE if not exists genres
(
    genre_id   integer generated by default as identity primary key,
    genre_name varchar(255) not null unique
);

CREATE TABLE if not exists mpa_ratings
(
    mpa_id   integer generated by default as identity primary key,
    mpa_name varchar(255) not null unique
);

CREATE TABLE if not exists films
(
    film_id               integer generated by default  as identity not null primary key,
    film_name             varchar(255) not null,
    description      varchar(200),
    release_date     date,
    duration integer,
    mpa_id    integer not null references mpa_ratings (mpa_id) on delete cascade,
    rate integer
);

CREATE TABLE if not exists users
(
    user_id       integer generated by default as identity not null primary key,
    email    varchar(255) not null unique,
    login    varchar(255) not null unique,
    user_name     varchar(255),
    birthday date
);

CREATE TABLE if not exists films_genres
(
    film_id  integer not null references films (film_id) on delete cascade,
    genre_id integer not null references genres (genre_id) on delete cascade,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE if not exists friends
(
    user_id   integer not null references users (user_id) on delete cascade,
    friend_id integer not null references users (user_id) on delete cascade,
    unique (user_id, friend_id)
);

CREATE TABLE if not exists likes
(
    film_id integer not null references films (film_id) on delete cascade,
    user_id integer not null references users (user_id) on delete cascade,
    PRIMARY KEY (film_id, user_id)
);
